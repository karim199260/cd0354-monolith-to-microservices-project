language: node_js
node_js:
  - 16

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"
# En supposant que le fichier .travis.yml se trouve dans le répertoire du projet et qu'il existe un sous-répertoire distinct pour chaque service.
# Utilisez les commandes `docker-compose` ou les commandes `docker build` individuelles.
# Construire

script:
  - docker --version # print the version for logging
  # - docker build -t simple-node .
  # - docker tag simple-node YOUR_DOCKER_HUB/simple-node:latest
  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker build -t udagram-api-user ./udagram-api-user
  - docker build -t udagram-frontend ./udagram-frontend
  - docker build -t udagram-reverseproxy ./udagram-reverseproxy
# Faites de même pour les trois autres images
# Marquage
  - docker tag udagram-api-feed karim199260/udagram-api-feed:v1
  - docker tag udagram-api-feed karim199260/udagram-api-user:v1
  - docker tag udagram-api-feed karim199260/udagram-frontend:v1
  - docker tag udagram-api-feed karim199260/udagram-reverseproxy:v1
# Faire de même pour les trois autres images ``
# ```bash
# Push
# En supposant que DOCKER_PASSWORD et DOCKER_USERNAME sont définis dans les paramètres du dépôt Travis
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push karim199260/udagram-api-feed:v1
  - docker push karim199260/udagram-api-user:v1
  - docker push karim199260/udagram-frontend:v1
  - docker push karim199260/udagram-reverseproxy:v1